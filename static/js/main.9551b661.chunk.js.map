{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducers.js","redux/filter/filter-actions.js","redux/filter/filter-reducers.js","redux/store.js","redux/contacts/contacts-operations.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","contactsReducer","createReducer","_","payload","state","filter","id","getFilter","filterReducer","action","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","combineReducers","contacts","store","configureStore","reducer","devTools","process","axios","defaults","baseURL","filtered","getAllContacts","getContactsList","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","map","find","alert","item","actions","post","then","data","catch","error","className","styles","formLabel","formInput","type","pattern","title","required","onChange","Filter","label","input","ContactList","useEffect","get","onClick","delete","deleteContacts","connect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9551b661.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLabel\":\"ContactForm_formLabel__299DI\",\"formInput\":\"ContactForm_formInput__2xKJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__zSqQ3\",\"input\":\"Filter_input__10dKx\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactSuccess\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactSuccess\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactSuccess\");\n\n// export const addContact = createAction(\"contacts/add\", (contact) => ({\n//   payload: {\n//     id: contact.id,\n//     name: contact.name,\n//     number: contact.number,\n//   },\n// }));\n\n// export const deleteContact = createAction(\"contacts/delete\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactSuccess,\n} from \"./contacts-actions\";\n\nconst contactsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default contactsReducer;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getFilter = createAction(\"filter/get\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { getFilter } from \"./filter-actions\";\n\nconst filterReducer = createReducer(\"\", {\n  [getFilter]: (_, action) => action.payload,\n});\n\nexport default filterReducer;\n","import {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducers\";\nimport filterReducer from \"./filter/filter-reducers\";\n\n// const persistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n});\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\n// export { store, persistor };\n\nexport default store;\n","import axios from \"axios\";\nimport * as actions from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:3000\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(actions.fetchContactRequest());\n  axios\n    .get(`/contacts/`)\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\n    .catch((error) => dispatch(actions.fetchContactError(error)));\n};\n\nexport const addContact = (contact) => (dispatch) => {\n  const item = {\n    name: contact.name,\n    number: contact.number,\n  };\n\n  dispatch(actions.addContactRequest());\n\n  axios\n    .post(\"/contacts\", item)\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\n    .catch((error) => dispatch(actions.addContactError(error)));\n};\n\nexport const deleteContacts = (id) => (dispatch) => {\n  dispatch(actions.deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\n    .catch((error) => dispatch(actions.deleteContactError(error)));\n};\n","export const filtered = (state) => state.filter;\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { filtered } from \"../../redux/filter/filter-selector\";\n\nexport const getAllContacts = (state) => state.contacts;\n\n// export default function getContactsList(state) {\n//   return getContacts(state).filter((contact) => contact.name.toLowerCase().includes(state.filter.toLowerCase()));\n// }\n\nexport const getContactsList = createSelector(\n  [getAllContacts, filtered],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { getAllContacts } from \"../../redux/contacts/contacts-selector\";\n// import shortid from \"shortid\";\n\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const allContacts = contacts.map((contact) => contact.name.toLowerCase());\n\n    if (allContacts.find((contact) => contact === name.toLowerCase())) {\n      return alert(\"This name has already used, enter another name, please!\");\n    }\n\n    const newContact = {\n      // id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContact(newContact));\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label className={styles.formLabel}>\n          Name\n          <input\n            className={styles.formInput}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </label>\n        <label className={styles.formLabel}>\n          Number\n          <input\n            className={styles.formInput}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/filter/filter-actions\";\nimport { filtered } from \"../../redux/filter/filter-selector\";\n\nimport styles from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(filtered);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label className={styles.label}>\n        Find by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={(e) => dispatch(getFilter(e.target.value))}\n        ></input>\n      </label>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContactsList } from \"../../redux/contacts/contacts-selector\";\nimport {\n  fetchContacts,\n  deleteContacts,\n} from \"../../redux/contacts/contacts-operations\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContactsList);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import { connect } from \"react-redux\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport \"modern-normalize\";\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default connect(null)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}