{"version":3,"sources":["redux/auth/auth-operations.js","redux/contacts/contacts-actions.js","components/Navigation/Navigation.module.css","components/UserMenu/UserMenu.module.css","redux/filter/filter-actions.js","redux/contacts/contacts-reducers.js","redux/filter/filter-reducers.js","redux/auth/auth-slice.js","redux/store.js","redux/auth/auth-selectors.js","components/PublicRoute.js","components/PrivateRoute.js","components/Navigation/Navigation.js","images/user_default.png","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","rejectWithValue","post","data","logIn","logOut","_","fetchCurrentUser","thunkAPI","state","getState","persistedToken","auth","get","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","module","exports","getFilter","contactsReducer","createReducer","payload","filter","id","filterReducer","action","authSlice","createSlice","name","initialState","user","email","isLoggedIn","isFetchingCurrentUser","extraReducers","authOperations","fulfilled","pending","rejected","authPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","authReducer","contacts","devTools","process","persistor","persistStore","getIsLoggedIn","getIsFetchingCurrent","authSelectors","PublicRoute","children","restricted","redirectTo","routeProps","shouldRedirect","useSelector","to","PrivateRoute","Navigation","className","styles","navContainer","exact","navLink","UserMenu","dispatch","useDispatch","userMenuContainer","userContainer","src","defaultImage","alt","width","type","onClick","AppBar","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.dc2fc5ea.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const register = createAsyncThunk(\n  \"auth/register\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const logIn = createAsyncThunk(\n  \"auth/login\",\n  async (credentials, { rejectWithValue }) => {\n    try {\n      const { data } = await axios.post(\"/users/login\", credentials);\n      token.set(data.token);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const logOut = createAsyncThunk(\n  \"auth/logout\",\n  async (_, { rejectWithValue }) => {\n    try {\n      await axios.post(\"/users/logout\");\n      token.unset();\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\nexport const fetchContactError = createAction(\"contacts/fetchContactSuccess\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactSuccess\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactSuccess\");\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Navigation_navLink__-35po\",\"navContainer\":\"Navigation_navContainer__1ewSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenuContainer\":\"UserMenu_userMenuContainer__1zyIO\",\"userContainer\":\"UserMenu_userContainer__33Mku\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getFilter = createAction(\"filter/get\");\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactSuccess,\n  deleteContactSuccess,\n  fetchContactSuccess,\n} from \"./contacts-actions\";\n\nconst contactsReducer = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default contactsReducer;\n","import { createReducer } from \"@reduxjs/toolkit\";\nimport { getFilter } from \"./filter-actions\";\n\nconst filterReducer = createReducer(\"\", {\n  [getFilter]: (_, action) => action.payload,\n});\n\nexport default filterReducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport * as authOperations from \"./auth-operations\";\n\nexport const initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [authOperations.logOut.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [authOperations.fetchCurrentUser.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","import {\n  configureStore,\n  // combineReducers,\n  getDefaultMiddleware,\n} from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/contacts-reducers\";\nimport filterReducer from \"./filter/filter-reducers\";\nimport authReducer from \"./auth/auth-slice\";\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const rootReducer = combineReducers({\n//   contacts: contactsReducer,\n//   filter: filterReducer,\n// });\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// const store = configureStore({\n//   reducer: persistedReducer,\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n    filter: filterReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\n// export default store;\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nexport const getUsername = (state) => state.auth.user.name;\n\nexport const getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser;\n\nexport const authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport * as authSelectors from \"../redux/auth/auth-selectors\";\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport styles from \"./Navigation.module.css\";\n\nexport default function Navigation() {\n  return (\n    <div className={styles.navContainer}>\n      <NavLink to=\"/register\" exact className={styles.navLink}>\n        Sign Up\n      </NavLink>\n      <NavLink to=\"/login\" exact className={styles.navLink}>\n        Log In\n      </NavLink>\n    </div>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/user_default.2a907e6b.png\";","import { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth/auth-selectors\";\nimport * as authOperations from \"../../redux/auth/auth-operations\";\nimport defaultImage from \"../../images/user_default.png\";\n\nimport styles from \"./UserMenu.module.css\";\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n\n  return (\n    <div className={styles.userMenuContainer}>\n      <div className={styles.userContainer}>\n        <img src={defaultImage} alt=\"\" width=\"32\" />\n        <span>Welcome, {name}</span>\n      </div>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Log Out\n      </button>\n    </div>\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport Navigation from \"../Navigation\";\nimport UserMenu from \"../UserMenu\";\nimport * as authSelectors from \"../../redux/auth/auth-selectors\";\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return <header>{isLoggedIn ? <UserMenu /> : <Navigation />}</header>;\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect, lazy, Suspense } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport * as authSelectors from \"./redux/auth/auth-selectors\";\nimport * as authOperations from \"./redux/auth/auth-operations\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport AppBar from \"./components/AppBar\";\n\nimport \"modern-normalize\";\nimport \"./styles.css\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView/HomeView.js\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView/RegisterView.js\"));\nconst LoginView = lazy(() => import(\"./views/LoginView/LoginView.js\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView/ContactsView.js\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <div className=\"container\">\n      {!isFetchingCurrentUser && (\n        <Suspense fallback={<h3>Loading... Wait, please</h3>}>\n          <AppBar />\n\n          <Switch>\n            <PublicRoute exact path=\"/\">\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute\n              exact\n              path=\"/register\"\n              redirectTo=\"/contacts\"\n              restricted\n            >\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path=\"/contacts\">\n              <ContactsView />\n            </PrivateRoute>\n          </Switch>\n        </Suspense>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}