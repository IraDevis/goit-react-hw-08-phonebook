{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","redux/contacts/contacts-operations.js","redux/filter/filter-selector.js","redux/contacts/contacts-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","axios","defaults","baseURL","filtered","state","filter","getAllContacts","contacts","getContactsList","createSelector","normalizedFilter","toLowerCase","contact","name","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","e","target","onSubmit","preventDefault","map","find","alert","item","actions","post","then","data","catch","error","type","pattern","title","required","onChange","Filter","getFilter","ContactList","useEffect","get","id","onClick","delete","deleteContacts","ContactsView"],"mappings":"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","file":"static/js/4.bcb7a410.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from \"axios\";\r\nimport * as actions from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchContacts = () => (dispatch) => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get(`/contacts/`)\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.fetchContactError(error)));\r\n};\r\n\r\nexport const addContact = (contact) => (dispatch) => {\r\n  const item = {\r\n    name: contact.name,\r\n    number: contact.number,\r\n  };\r\n\r\n  dispatch(actions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", item)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(actions.addContactError(error)));\r\n};\r\n\r\nexport const deleteContacts = (id) => (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(actions.deleteContactError(error)));\r\n};\r\n","export const filtered = (state) => state.filter;\n","import { createSelector } from \"@reduxjs/toolkit\";\nimport { filtered } from \"../../redux/filter/filter-selector\";\n\nexport const getAllContacts = (state) => state.contacts;\n\nexport const getContactsList = createSelector(\n  [getAllContacts, filtered],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { getAllContacts } from \"../../redux/contacts/contacts-selector\";\n// import shortid from \"shortid\";\n\n// import styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const allContacts = contacts.map((contact) => contact.name.toLowerCase());\n\n    if (allContacts.find((contact) => contact === name.toLowerCase())) {\n      return alert(\"This name has already used, enter another name, please!\");\n    }\n\n    const newContact = {\n      // id: shortid.generate(),\n      name: name,\n      number: number,\n    };\n\n    dispatch(addContact(newContact));\n\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { getFilter } from \"../../redux/filter/filter-actions\";\nimport { filtered } from \"../../redux/filter/filter-selector\";\n\n// import styles from \"./Filter.module.css\";\n\nexport default function Filter() {\n  const value = useSelector(filtered);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label>\n        Find by name\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => dispatch(getFilter(e.target.value))}\n        ></input>\n      </label>\n    </>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContactsList } from \"../../redux/contacts/contacts-selector\";\nimport {\n  fetchContacts,\n  deleteContacts,\n} from \"../../redux/contacts/contacts-operations\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContactsList);\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id}>\n            <p>\n              {name}: {number}\n            </p>\n            <button type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import ContactForm from \"../../components/ContactForm\";\nimport Filter from \"../../components/Filter\";\nimport ContactList from \"../../components/ContactList\";\n\nexport default function ContactsView() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"sourceRoot":""}